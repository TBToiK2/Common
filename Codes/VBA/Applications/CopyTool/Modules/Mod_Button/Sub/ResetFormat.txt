'----------------------------------------------------------------------------------------------------
Public Sub ResetFormat()

    Application.ScreenUpdating = False
    Application.DisplayAlerts = False

    If ActiveSheet.CodeName = "Main" Then Exit Sub

    Dim ws As Worksheet
    Set ws = ActiveSheet
    With ws

        'シート プロテクト解除
        Call .Unprotect(PASS)

        '共通内範囲 設定
        Dim ComRange As Range
        Dim ComValidationRange As Range
        Set ComRange = .Range(.Cells(3, 3), .Cells(8, 4))
        Set ComValidationRange = .Range(.Cells(3, 3), .Cells(7, 4))

        With ComRange

            'ロック解除
            .Locked = False

            '書式 設定
            With .Font
                .Name = "メイリオ"
                .FontStyle = ""
                .Size = 10
            End With
            .HorizontalAlignment = xlHAlignCenter
            With .Borders
                .Color = vbBlack
                .Weight = xlThin
                .LineStyle = xlContinuous
            End With

            '結合 設定
            Call .Merge(True)

            '入力規則, 条件付き書式 設定
            Call .Validation.Delete
            Call .FormatConditions.Delete

            With ComValidationRange

                Call .Validation.Add(xlValidateList, xlValidAlertStop, xlEqual, "する, しない")

                Dim ComAddCondition As FormatCondition
                Set ComAddCondition = .FormatConditions.Add(xlBlanksCondition)
                ComAddCondition.Interior.Color = vbRed
            End With
        End With

        'ファイル別内範囲 設定
        Dim FileRange As Range
        Dim FileConditionRange As Range
        Dim FileNameRange As Range, FileRowColRange As Range
        Set FileRange = .Range(.Cells(13, 3), .Cells(19, 4))
        Set FileConditionRange = .Range(.Cells(13, 3), .Cells(18, 4))
        Set FileNameRange = .Range(.Cells(13, 3), .Cells(13, 4))
        Set FileRowColRange = .Range(.Cells(15, 3), .Cells(18, 4))

        With FileRange

            'ロック解除
            .Locked = False

            '書式 設定
            With .Font
                .Name = "メイリオ"
                .FontStyle = ""
                .Size = 10
            End With
            .HorizontalAlignment = xlHAlignGeneral
            With .Borders
                .Color = vbBlack
                .Weight = xlThin
                .LineStyle = xlContinuous
                .Item(xlEdgeBottom).Weight = xlMedium
                .Item(xlInsideVertical).LineStyle = xlDash
            End With

            '結合 設定
            Call .UnMerge

            '条件付き書式 設定
            Call .Validation.Delete
            Call .FormatConditions.Delete

            With FileConditionRange
                Dim FileAddCondition As FormatCondition
                Set FileAddCondition = .FormatConditions.Add(xlBlanksCondition)
                FileAddCondition.Interior.Color = vbRed
            End With
        End With
        FileNameRange.WrapText = True
        FileRowColRange.HorizontalAlignment = xlHAlignCenter

        'コピー項目表内範囲 設定
        Dim CopyItemDataEnd As Range
        Dim CopyRange As Range, CopyAllRange As Range
        Dim CopyHeaderRange As Range
        Dim CopyInChargeRange As Range, CopyDiscriptionRange As Range, CopyDuplicationRange As Range
        Set CopyItemDataEnd = .Cells(.Rows.Count, 2).End(xlUp)
        Set CopyRange = .Range(.Cells(21, 1), .Cells(CopyItemDataEnd.Row, 5))
        Set CopyAllRange = .Range(.Cells(21, 1), .Cells(.Rows.Count, 5))
        Set CopyHeaderRange = .Range(.Cells(21, 1), .Cells(21, 5))
        Set CopyInChargeRange = .Range(.Cells(22, 4), .Cells(CopyItemDataEnd.Row, 4))
        Set CopyDiscriptionRange = .Range(.Cells(22, 5), .Cells(CopyItemDataEnd.Row, 5))
        Set CopyDuplicationRange = .Range(.Cells(22, 6), .Cells(.Rows.Count, 6))

        '書式 クリア
        CopyAllRange.Borders.LineStyle = xlLineStyleNone

        With CopyRange

            'ロック解除
            .Locked = False

            '書式 設定
            With .Font
                .Name = "メイリオ"
                .FontStyle = ""
                .Size = 10
            End With
            .HorizontalAlignment = xlHAlignGeneral
            With .Borders
                .Color = vbBlack
                .Weight = xlThin
                .LineStyle = xlContinuous
                .Item(xlEdgeRight).Weight = xlMedium
                .Item(xlEdgeBottom).Weight = xlMedium
                .Item(xlEdgeLeft).Weight = xlMedium
            End With
            Call .Rows.AutoFit
        End With
        CopyDiscriptionRange.WrapText = True
        With CopyHeaderRange
            .HorizontalAlignment = xlHAlignCenter
            .Font.Bold = True
        End With
        CopyInChargeRange.HorizontalAlignment = xlHAlignCenter

        '重複項目 再設定
        '値 消去
        With CopyDuplicationRange
            Call .Clear
            .Locked = False
        End With

        '関数 設定
        If CopyItemDataEnd.Row > CopyHeaderRange.Row Then

            Dim Address As String, CountIf As String
            Address = CopyItemDataEnd.Address
            CountIf = "COUNTIF($B$22:" & Address & ", $B22)"

            With .Cells(22, 6)

                .Formula = "=IF(" & CountIf & "> 1, ""["" & $B22 & ""] × "" &" & CountIf & ", """")"
                If CopyItemDataEnd.Row - CopyHeaderRange.Row > 1 Then
                    Call .AutoFill(.Resize(CopyItemDataEnd.Row - CopyHeaderRange.Row))
                End If
            End With
        End If

        'シート プロテクト
        Call .Protect(PASS, UserInterfaceOnly:=True, AllowFormattingCells:=True, AllowInsertingRows:=True, AllowDeletingRows:=True, AllowSorting:=True, AllowFiltering:=True)

    End With

    Application.DisplayAlerts = False
    Application.ScreenUpdating = True

End Sub
'----------------------------------------------------------------------------------------------------