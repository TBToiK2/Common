'----------------------------------------------------------------------------------------------------
'2022/06/07 15:06:48
'----------------------------------------------------------------------------------------------------
Public Function ArrayByType(ByVal arrType As VbVarType, ParamArray arr() As Variant) As Variant
On Error Resume Next

    If UBound(arr) = -1 Then Exit Function

    Dim arrLB As Long, arrUB As Long
    arrLB = LBound(arr)
    arrUB = UBound(arr)

    Dim cnt As Long, element As Variant
    Select Case arrType
        '0
        Case vbEmpty
            Dim emptyArr() As Variant
            ReDim emptyArr(arrLB To arrUB)
            ArrayByType = emptyArr
        '1
        Case vbNull
            Dim nullArr() As Variant
            ReDim nullArr(arrLB To arrUB)
            For cnt = arrLB To arrUB
                nullArr(cnt) = Null
            Next cnt
            ArrayByType = nullArr
        '2
        Case vbInteger
            Dim intArr() As Integer
            ReDim intArr(arrLB To arrUB)
            For cnt = arrLB To arrUB
                intArr(cnt) = CInt(arr(cnt))
            Next cnt
            If Err.Number = 13 Then GoTo Err_Convert
            ArrayByType = intArr
        '3
        Case vbLong
            Dim lngArr() As Long
            ReDim lngArr(arrLB To arrUB)
            For cnt = arrLB To arrUB
                lngArr(cnt) = CLng(arr(cnt))
            Next cnt
            If Err.Number = 13 Then GoTo Err_Convert
            ArrayByType = lngArr
        '4
        Case vbSingle
            Dim sngArr() As Single
            ReDim sngArr(arrLB To arrUB)
            For cnt = arrLB To arrUB
                sngArr(cnt) = CSng(arr(cnt))
            Next cnt
            If Err.Number = 13 Then GoTo Err_Convert
            ArrayByType = sngArr
        '5
        Case vbDouble
            Dim dblArr() As Double
            ReDim dblArr(arrLB To arrUB)
            For cnt = arrLB To arrUB
                dblArr(cnt) = CDbl(arr(cnt))
            Next cnt
            If Err.Number = 13 Then GoTo Err_Convert
            ArrayByType = dblArr
        '6
        Case vbCurrency
            Dim curArr() As Currency
            ReDim curArr(arrLB To arrUB)
            For cnt = arrLB To arrUB
                curArr(cnt) = CCur(arr(cnt))
            Next cnt
            If Err.Number = 13 Then GoTo Err_Convert
            ArrayByType = curArr
        '7
        Case vbDate
            Dim dateArr() As Date
            ReDim dateArr(arrLB To arrUB)
            For cnt = arrLB To arrUB
                dateArr(cnt) = CDate(arr(cnt))
            Next cnt
            If Err.Number = 13 Then GoTo Err_Convert
            ArrayByType = dateArr
        '8
        Case vbString
            Dim strArr() As String
            ReDim strArr(arrLB To arrUB)
            For cnt = arrLB To arrUB
                strArr(cnt) = CStr(arr(cnt))
            Next cnt
            If Err.Number = 13 Then GoTo Err_Convert
            ArrayByType = strArr
        '9
        Case vbObject
            Dim objArr() As Object
            ReDim objArrArr(arrLB To arrUB)
            For cnt = arrLB To arrUB
                Set objArrArr(cnt) = arr(cnt)
            Next cnt
            If Err.Number = 13 Then GoTo Err_Convert
            ArrayByType = objArrArr
        '11
        Case vbBoolean
            Dim boolArr() As Boolean
            ReDim boolArr(arrLB To arrUB)
            For cnt = arrLB To arrUB
                boolArr(cnt) = CBool(arr(cnt))
            Next cnt
            If Err.Number = 13 Then GoTo Err_Convert
            ArrayByType = boolArr
        '12
        Case vbVariant
            ArrayByType = arr
        '14
        Case vbDecimal
            Dim decArr() As Variant
            ReDim decArr(arrLB To arrUB)
            For cnt = arrLB To arrUB
                decArr(cnt) = CDec(arr(cnt))
            Next cnt
            If Err.Number = 13 Then GoTo Err_Convert
            ArrayByType = decArr
        '17
        Case vbByte
            Dim byteArr() As Byte
            ReDim byteArr(arrLB To arrUB)
            For cnt = arrLB To arrUB
                byteArr(cnt) = CByte(arr(cnt))
            Next cnt
            If Err.Number = 13 Then GoTo Err_Convert
            ArrayByType = byteArr

        #If Win64 Then

        '20
        Case vbLongLong
            Dim lnglngArr() As LongLong
            ReDim lnglngArr(arrLB To arrUB)
            For cnt = arrLB To arrUB
                lnglngArr(cnt) = CLngLng(arr(cnt))
            Next cnt
            If Err.Number = 13 Then GoTo Err_Convert
            ArrayByType = lnglngArr

        #End If

        Case Else
            Call ShowErrMsg("指定されたデータ型は無効です。", title:="ConvTrueFalse")
            Exit Function
    End Select

    Exit Function

'エラー処理
Err_Convert:

    Call ShowErrMsg("指定されたデータ型ではない要素が含まれています。", title:="ConvTrueFalse")

End Function
'----------------------------------------------------------------------------------------------------